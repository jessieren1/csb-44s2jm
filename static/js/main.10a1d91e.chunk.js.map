{"version":3,"sources":["Taskform.jsx","App.js","index.js"],"names":["Taskform","props","useState","title","project","id","uuidv4","text","setText","handleChange","event","target","name","value","prevNote","className","type","onChange","onClick","isEdit","onUpdate","clickId","onNotShow","onAdd","preventDefault","initialTasks","Task","setIsEdit","setClickId","onDelete","AddButton","isShow","onShow","App","notes","setNotes","setIsShow","deleteNote","prevNotes","filter","noteItem","changeNote","updateText","oldId","prevItems","item","newChange","map","newNote","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.10a1d91e.chunk.js","sourcesContent":["import { v4 as uuidv4 } from \"uuid\";\nimport React, { useState } from \"react\";\n\nconst Taskform = (props) => {\n  const [text, setText] = useState({\n    title: \"\",\n    project: \"\",\n    id: uuidv4()\n  });\n\n  function handleChange(event) {\n    const { name, value } = event.target;\n    setText((prevNote) => {\n      return {\n        ...prevNote,\n        [name]: value\n      };\n    });\n  }\n  function submitText(event) {\n    props.onAdd(text);\n    setText({\n      title: \"\",\n      project: \"\"\n    });\n    event.preventDefault();\n    props.onNotShow();\n  }\n\n  function UpdateText(event) {\n    props.onUpdate([text, props.clickId]);\n    //event.preventDefault();\n    props.onNotShow();\n  }\n\n  function submitCancel(event) {\n    event.preventDefault();\n    props.onNotShow();\n  }\n\n  return (\n    <div className=\"ui centered card\">\n      <div className=\"content\">\n        <div className=\"ui form\">\n          <div className=\"field\">\n            <label>Title</label>\n            <input\n              type=\"text\"\n              name=\"title\"\n              onChange={handleChange}\n              value={text.title}\n            />\n          </div>\n          <div className=\"field\">\n            <label>Project</label>\n            <input\n              type=\"text\"\n              name=\"project\"\n              onChange={handleChange}\n              value={text.project}\n            />\n          </div>\n          <div className=\"ui two bottom attached buttons\">\n            <button\n              onClick={props.isEdit ? UpdateText : submitText}\n              className=\"ui basic blue button\"\n            >\n              {props.isEdit ? <p>Update</p> : <p>Create</p>}\n            </button>\n            <button onClick={submitCancel} className=\"ui basic red button\">\n              Cancel\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default Taskform;\n","import { v4 as uuidv4 } from \"uuid\";\nimport React, { useState } from \"react\";\nimport Taskform from \"./Taskform\";\nconst initialTasks = [\n  {\n    title: \"Clean up files\",\n    project: \"Office Chores\",\n    id: uuidv4()\n  },\n  {\n    title: \"Walk dog\",\n    project: \"Life Chores\",\n    id: uuidv4()\n  }\n];\n\nconst Task = (props) => {\n  const [isEdit, setIsEdit] = useState(false);\n  const [clickId, setClickId] = useState();\n\n  return (\n    <>\n      {isEdit && (\n        <Taskform\n          isEdit={isEdit}\n          clickId={clickId}\n          onUpdate={props.onChange}\n          onNotShow={() => {\n            setIsEdit(false);\n          }}\n        />\n      )}\n      <div className=\"ui centered card\">\n        <div className=\"content\">\n          <div className=\"header\">{props.title}</div>\n          <div className=\"meta\">{props.project}</div>\n          <div className=\"extra content\">\n            <span\n              onClick={() => {\n                setIsEdit(true);\n                setClickId(props.id);\n              }}\n              className=\"right floated edit icon\"\n            >\n              <i className=\"edit icon\" />\n            </span>\n            <span\n              onClick={() => {\n                props.onDelete(props.id);\n              }}\n              className=\"right floated trash icon\"\n            >\n              <i className=\"trash icon\" />\n            </span>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst AddButton = (props) => {\n  return (\n    <div className=\"ui basic content center aligned segment\">\n      {!props.isShow && (\n        <button\n          onClick={() => {\n            props.onShow();\n          }}\n          className=\"ui basic button icon\"\n        >\n          <i className=\"plus icon\" />\n        </button>\n      )}\n    </div>\n  );\n};\n\nfunction App() {\n  const [notes, setNotes] = useState(initialTasks);\n  const [isShow, setIsShow] = useState(false);\n\n  function deleteNote(id) {\n    setNotes((prevNotes) => {\n      return prevNotes.filter((noteItem) => {\n        return noteItem.id !== id;\n      });\n    });\n  }\n\n  function addNote(newNote) {\n    setNotes((prevNotes) => {\n      return [...prevNotes, newNote];\n    });\n  }\n\n  //Should be updated here later\n  function changeNote(event) {\n    const [updateText, oldId] = event;\n\n    setNotes((prevItems) => {\n      return prevItems.filter((item) => {\n        return item.id !== oldId;\n      });\n    });\n\n    var newChange = {\n      title: updateText.title,\n      project: updateText.project,\n      id: oldId\n    };\n\n    setNotes((prevNotes) => {\n      return [...prevNotes, newChange];\n    });\n  }\n\n  return (\n    <div className=\"ui three column centered grid\">\n      <div className=\"column\">\n        {notes.map((noteItem) => {\n          return (\n            <Task\n              key={noteItem.id}\n              id={noteItem.id}\n              title={noteItem.title}\n              project={noteItem.project}\n              onDelete={deleteNote}\n              onChange={changeNote}\n            />\n          );\n        })}\n        {isShow && (\n          <Taskform\n            onAdd={addNote}\n            onNotShow={() => {\n              setIsShow(false);\n            }}\n          />\n        )}\n\n        <AddButton\n          onShow={() => {\n            setIsShow(!isShow);\n          }}\n          isShow={isShow}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}